@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<div class="container">
    <div class="row">
        <label class="small">Connection Id: <span id="connectionid"></span></label>
    </div>
    <div class="row">
        @* Join to message *@
        <div id="userinfo" class="col-6">
            <div class="mb-2">
                <label class="mb-1">Please enter your username</label>
                <input type="text" class="form-control" id="username" name="username" autocomplete="off" />
            </div>
            <div class="d-grid">
                <button type="button" class="btn btn-primary" onclick="SetUsername()">Join to chat</button>
            </div>
        </div>
        @* Message Area *@
        <div id="messagearea" class="col-6" style="display:none;">
            <div>Joined as: <b><span id="username1">Not Set</span></b></div>
            <hr />
            <div class="row">
                <div class="col-6">
                    <ul id="messageList"></ul>
                </div>
            </div>
            <hr />
            <div class="d-flex gap-2">
                <input id="message" class="form-control" type="text" autocomplete="off" />
                <button id="sendButton" class="btn btn-primary"><i class="fa-regular fa-paper-plane-top"></i></button>
            </div>
        </div>
        @* Notification *@
        <div id="notification" class="col-6">
            <div class="card">
                <div class="card-header">
                    <label class="card-title">Notification</label>
                </div>
                <div class="card-body">
                    <div class="mb-2">
                        <label>Title</label>
                        <input id="notification-title" type="text" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label>Message</label>
                        <textarea id="notification-body" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="d-grid">
                        <button id="send-notification-btn" class="btn btn-primary" onclick="SendNotification();" disabled>Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

    <script>
        "use strict";

        //#region Chat
        var chatConnection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
        var username = '';
        document.getElementById("sendButton").disabled = true;

        chatConnection.on("RecieveMessage", function (user, message) {
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var encodedMsg = user + " sys: " + msg;
            var li = document.createElement("li");
            li.textContent = encodedMsg;
            document.getElementById("messageList").appendChild(li);
        });

        chatConnection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
            chatConnection.invoke("UserOnConnected").then(function (connectionId) {
                document.getElementById("connectionid").innerText = connectionId;
            }).catch(function (err) {
                return console.error(err.toString());
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            var message = document.getElementById("message").value;
            chatConnection.invoke("SendBroadcastMessage", username, message).then(function () {
                document.getElementById("message").value = "";
            }).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });

        function SetUsername() {
            // Check the username.
            var usernameinput = document.getElementById("username").value;
            if (!usernameinput) {
                alert("Please enter your username.");
                return;
            }
            username = usernameinput;

            document.getElementById("userinfo").style.display = 'none';
            document.getElementById("messagearea").style.display = 'block';
            document.getElementById("username1").innerText = username;
        }
        //#endregion

        //#region Notification
        var notificationConnection = new signalR.HubConnectionBuilder().withUrl("/notificationhub").build();

        notificationConnection.start().then(function () {
            document.getElementById("send-notification-btn").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });


        function SendNotification() {
            var title = document.getElementById("notification-title").value;
            var body = document.getElementById("notification-body").value;
            if (!title || !body) {
                alert("اعلان باید عنوان و محتوا داشته باشد.");
                return;
            }
            notificationConnection.invoke("SendNotification", title, body).then(function () {
            }).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        }

        notificationConnection.on("ReceiveNotification", function (title, body) {
            if (Notification.permission === "default" || Notification.permission === "denied") {
                Notification.requestPermission();
            }
            new Notification(title, {
                body: body
            });
        });
                        // #endregion
    </script>
}